{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from 'firebase';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ApplicationActions } from '../../redux/states/ApplicationState/ApplicationSlice';\n\nconst mapStateToProps = state => ({\n  ApplicationState: state.ApplicationState\n});\n\nconst dispatchProps = dispatch => bindActionCreators({\n  updateLogin: ApplicationActions.updateLogInStatus\n}, dispatch);\n\nconst connector = connect(mapStateToProps, dispatchProps);\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      displayName: ''\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props.ApplicationState);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Fragment, {\n      children: [/*#__PURE__*/_jsx(\"a\", {\n        href: \"#\",\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          onClick: async e => {\n            e.preventDefault();\n            const provider = new firebase.auth.GoogleAuthProvider();\n            const user = await firebase.auth().signInWithPopup(provider);\n            const {\n              displayName\n            } = user.user;\n            this.setState({\n              displayName\n            });\n          },\n          children: \"Google Login\"\n        })\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"h1\", {\n        children: this.state.displayName\n      })]\n    });\n  }\n\n}\n\nexport default connector(Login);","map":null,"metadata":{},"sourceType":"module"}