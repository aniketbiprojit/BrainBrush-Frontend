{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aniket/Work/brainbrush-work/frontend/components/Company/Header/Menu/ButtonCard/ButtonCard.tsx\";\nimport React from 'react';\n\nconst ButtonCard = ({\n  icon,\n  text,\n  isSelected\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      cursor: 'pointer'\n    },\n    className: `p-4 m-2 my-4 md:p-10 justify-center ${isSelected ? 'bg-secondary' : 'hover:bg-gray-300'} rounded-xl md:rounded-3xl`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `icon ml-3 md:ml-3 justify-center text-4xl md:text-6xl ${isSelected ? 'text-white' : ''}`,\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mt-4 md:mt-12 text-sm md:text-xl font-semibold ${isSelected ? 'text-white' : ''}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\nexport default ButtonCard;","map":{"version":3,"sources":["/home/aniket/Work/brainbrush-work/frontend/components/Company/Header/Menu/ButtonCard/ButtonCard.tsx"],"names":["React","ButtonCard","icon","text","isSelected","cursor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,UAAsE,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAAgC;AAC9G,sBACC;AACC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADR;AAEC,IAAA,SAAS,EAAG,uCAAsCD,UAAU,GAAG,cAAH,GAAoB,mBAAoB,4BAFrG;AAAA,4BAIC;AAAK,MAAA,SAAS,EAAG,yDAAwDA,UAAU,GAAG,YAAH,GAAkB,EAAG,EAAxG;AAAA,gBAA4GF;AAA5G;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAK,MAAA,SAAS,EAAG,kDAAiDE,UAAU,GAAG,YAAH,GAAkB,EAAG,EAAjG;AAAA,gBAAqGD;AAArG;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAVD;;AAYA,eAAeF,UAAf","sourcesContent":["import React from 'react'\nconst ButtonCard: React.FC<{ icon: any; text: string; isSelected: boolean }> = ({ icon, text, isSelected }) => {\n\treturn (\n\t\t<div\n\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\tclassName={`p-4 m-2 my-4 md:p-10 justify-center ${isSelected ? 'bg-secondary' : 'hover:bg-gray-300'} rounded-xl md:rounded-3xl`}\n\t\t>\n\t\t\t<div className={`icon ml-3 md:ml-3 justify-center text-4xl md:text-6xl ${isSelected ? 'text-white' : ''}`}>{icon}</div>\n\t\t\t<div className={`mt-4 md:mt-12 text-sm md:text-xl font-semibold ${isSelected ? 'text-white' : ''}`}>{text}</div>\n\t\t</div>\n\t)\n}\n\nexport default ButtonCard\n"]},"metadata":{},"sourceType":"module"}