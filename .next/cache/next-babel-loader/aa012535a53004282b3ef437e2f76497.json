{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aniket/Work/brainbrush-work/frontend/pages/company/[company]/revenue/index.tsx\";\nimport { useRouter } from 'next/dist/client/router';\nimport Link from 'next/link';\nimport React, { Fragment } from 'react';\nimport CompanyHeader from '../../../../components/Company/Header';\n\nconst Revenue = ({\n  company\n}) => {\n  const {\n    route,\n    query\n  } = useRouter();\n  const isAbsolute = route === '/company/[company]/revenue';\n\n  if (isAbsolute) {\n    console.log(isAbsolute);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [isAbsolute && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CompanyHeader, {\n        company: company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [\"Relative Page Link to Absolute \", company, /*#__PURE__*/_jsxDEV(Link, {\n        href: !isAbsolute && `/company/${company}/revenue`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Revenue;","map":{"version":3,"sources":["/home/aniket/Work/brainbrush-work/frontend/pages/company/[company]/revenue/index.tsx"],"names":["useRouter","Link","React","Fragment","CompanyHeader","Revenue","company","route","query","isAbsolute","console","log"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,aAAP,MAA0B,uCAA1B;;AAEA,MAAMC,OAAsC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC/D,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBR,SAAS,EAAlC;AACA,QAAMS,UAAU,GAAGF,KAAK,KAAK,4BAA7B;;AACA,MAAIE,UAAJ,EAAgB;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA;;AACD,sBACC,QAAC,QAAD;AAAA,eACEA,UAAU,iBACV,QAAC,QAAD;AAAA,6BACC,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFF,eAMC,QAAC,QAAD;AAAA,oDACiCA,OADjC,eAEC,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,CAACG,UAAD,IAAgB,YAAWH,OAAQ,UAA/C;AAAA,+BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["import { useRouter } from 'next/dist/client/router'\nimport Link from 'next/link'\nimport React, { Fragment } from 'react'\n\nimport CompanyHeader from '../../../../components/Company/Header'\n\nconst Revenue: React.FC<{ company: string }> = ({ company }) => {\n\tconst { route, query } = useRouter()\n\tconst isAbsolute = route === '/company/[company]/revenue'\n\tif (isAbsolute) {\n\t\tconsole.log(isAbsolute)\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t{isAbsolute && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<CompanyHeader company={company} />\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t\t<Fragment>\n\t\t\t\tRelative Page Link to Absolute {company}\n\t\t\t\t<Link href={!isAbsolute && `/company/${company}/revenue`}>\n\t\t\t\t\t<p>Page</p>\n\t\t\t\t</Link>\n\t\t\t</Fragment>\n\t\t</Fragment>\n\t)\n}\n\nexport default Revenue\n"]},"metadata":{},"sourceType":"module"}