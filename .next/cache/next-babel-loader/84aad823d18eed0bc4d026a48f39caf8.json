{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aniket/Work/brainbrush-work/frontend/pages/company/[company]/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/dist/client/router';\nimport React, { Fragment } from 'react';\nimport Revenue from './revenue';\n\nvar Company = function Company() {\n  _s();\n\n  var router = useRouter();\n  var company = router.query.company;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Revenue, {\n      company: company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Company, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Company;\nexport default Company;\n\nvar _c;\n\n$RefreshReg$(_c, \"Company\");","map":{"version":3,"sources":["/home/aniket/Work/brainbrush-work/frontend/pages/company/[company]/index.tsx"],"names":["useRouter","React","Fragment","Revenue","Company","router","company","query"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,OAAiB,GAAG,SAApBA,OAAoB,GAAM;AAAA;;AAC/B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAD+B,MAEvBM,OAFuB,GAEXD,MAAM,CAACE,KAFI,CAEvBD,OAFuB;AAG/B,sBACC,QAAC,QAAD;AAAA,4BACC;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,aADD,eAEC,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,aAFD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAMA,CATD;;GAAMF,O;UACUJ,S;;;KADVI,O;AAWN,eAAeA,OAAf","sourcesContent":["import { useRouter } from 'next/dist/client/router'\nimport React, { Fragment } from 'react'\nimport Revenue from './revenue'\n\nconst Company: React.FC = () => {\n\tconst router = useRouter()\n\tconst { company } = router.query\n\treturn (\n\t\t<Fragment>\n\t\t\t<p>{company}</p>\n\t\t\t<Revenue company={company as string}></Revenue>\n\t\t</Fragment>\n\t)\n}\n\nexport default Company\n"]},"metadata":{},"sourceType":"module"}