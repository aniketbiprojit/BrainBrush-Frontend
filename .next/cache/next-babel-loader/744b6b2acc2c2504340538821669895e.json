{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\nimport ReactGA from 'react-ga';\nimport { createLogger } from 'redux-logger';\n\nif (process.env.GA_INIT) {\n  ReactGA.initialize(process.env.GA_INIT);\n}\n\nconst middleware = [...getDefaultMiddleware()];\nconst logger = createLogger({\n  level: 'debug',\n  collapsed: true\n});\nmiddleware.push(logger);\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  enhancers: []\n});\nexport default store;","map":{"version":3,"sources":["/home/aniket/Work/brainbrush-work/frontend/redux/store.ts"],"names":["configureStore","getDefaultMiddleware","rootReducer","ReactGA","createLogger","process","env","GA_INIT","initialize","middleware","logger","level","collapsed","push","store","reducer","enhancers"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,OAAP,MAAoB,UAApB;AAEA,SAASC,YAAT,QAA6B,cAA7B;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,OAAhB,EAAyB;AACxBJ,EAAAA,OAAO,CAACK,UAAR,CAAmBH,OAAO,CAACC,GAAR,CAAYC,OAA/B;AACA;;AAED,MAAME,UAAU,GAAG,CAAC,GAAGR,oBAAoB,EAAxB,CAAnB;AAEA,MAAMS,MAAM,GAAGN,YAAY,CAAC;AAC3BO,EAAAA,KAAK,EAAE,OADoB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAAD,CAA3B;AAKAH,UAAU,CAACI,IAAX,CAAgBH,MAAhB;AAEA,MAAMI,KAAK,GAAGd,cAAc,CAAC;AAC5Be,EAAAA,OAAO,EAAEb,WADmB;AAE5BO,EAAAA,UAF4B;AAG5BO,EAAAA,SAAS,EAAE;AAHiB,CAAD,CAA5B;AAQA,eAAeF,KAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './rootReducer'\n\nimport ReactGA from 'react-ga'\n\nimport { createLogger } from 'redux-logger'\n\nif (process.env.GA_INIT) {\n\tReactGA.initialize(process.env.GA_INIT)\n}\n\nconst middleware = [...getDefaultMiddleware()]\n\nconst logger = createLogger({\n\tlevel: 'debug',\n\tcollapsed: true,\n})\n\nmiddleware.push(logger)\n\nconst store = configureStore({\n\treducer: rootReducer,\n\tmiddleware,\n\tenhancers: [],\n})\n\nexport type AppDispatch = typeof store.dispatch\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}